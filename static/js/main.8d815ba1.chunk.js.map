{"version":3,"sources":["images/brian.jpg","images/working-students.jpg","containers/billing.js","containers/checkout.js","containers/landingPage.js","components/checkoutForm.js","containers/payment.js","containers/storefront.js","index.js"],"names":["module","exports","steps","key","completed","icon","title","active","disabled","BillingSteps","Step","Group","items","Billing","updateGlobalState","globalState","handleChange","useCallback","e","name","value","formInfo","handleSubmit","firstName","lastName","schoolName","districtName","billingAddress","zipCode","city","stateCode","Segment","placeholder","Grid","Row","Column","width","Form","widths","inline","Input","fluid","label","onChange","to","Button","onClick","Header","as","style","fontSize","marginTop","ConfirmationSteps","Confirmation","href","size","Icon","readOnly","LandingPage","inverted","textAlign","minHeight","paddingTop","vertical","container","stackable","verticalAlign","Image","bordered","rounded","src","require","floated","Container","text","content","fontWeight","marginBottom","padding","color","CheckoutForm","props","state","complete","submit","bind","ev","this","stripe","createToken","token","console","log","fetch","mode","method","headers","body","JSON","stringify","amount","description","source","id","response","ok","setState","className","Divider","Component","injectStripe","PaymentSteps","Payment","apiKey","paymentPlan","CheckoutSteps","Storefront","cost","Card","centered","Content","Meta","Description","extra","basic","ReactDOM","render","useState","creditCardNumber","securityCode","setGlobalState","handleGlobalStateUpdate","updatedValues","prevValues","path","exact","document","querySelector"],"mappings":"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","file":"static/js/main.8d815ba1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brian.add0de09.jpg\";","module.exports = __webpack_public_path__ + \"static/media/working-students.31373f62.jpg\";","import React, { useCallback } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Form,\n  Grid,\n  Header,\n  Segment,\n  Step,\n} from 'semantic-ui-react'\n\nconst steps = [\n  {\n    key: 'shopping',\n    completed: true,\n    icon: 'shopping cart',\n    title: 'Shopping',\n  },\n  {\n    key: 'billing',\n    active: true,\n    icon: 'address card outline',\n    title: 'Billing',\n  },\n  {\n    key: 'payment',\n    disabled: true,\n    icon: 'payment',\n    title: 'Pay',\n  },\n  {\n    key: 'confirmation',\n    disabled: true,\n    icon: 'info',\n    title: 'Confirmation'\n  },\n]\n\nconst BillingSteps = () => <Step.Group items={steps} />\n\nfunction Billing({ updateGlobalState, globalState }) {\n  const handleChange = useCallback((e, { name, value }) => {\n    globalState.formInfo[name] = value\n    updateGlobalState(globalState);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    updateGlobalState(globalState);\n  }, []);\n\n  const {\n    firstName,\n    lastName,\n    schoolName,\n    districtName,\n    billingAddress,\n    zipCode,\n    city,\n    stateCode\n  } = globalState.formInfo;\n\n  return (\n    <Segment placeholder>\n      <BillingSteps />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <Form>\n              <Form.Group widths={4} inline>\n                <Form.Input\n                  fluid\n                  name='firstName'\n                  value={firstName}\n                  label='First name'\n                  placeholder='First name'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='lastName'\n                  value={lastName}\n                  label='Last name'\n                  placeholder='Last name'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='schoolName'\n                  value={schoolName}\n                  label='School Name'\n                  placeholder='School Name'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='districtName'\n                  value={districtName}\n                  label='District Name'\n                  placeholder='District Name'\n                  onChange={handleChange} />\n              </Form.Group>\n              <Form.Group widths={4} inline>\n                <Form.Input\n                  fluid\n                  name='billingAddress'\n                  value={billingAddress}\n                  label='Billing Address'\n                  placeholder='Billing Address'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='zipCode'\n                  value={zipCode}\n                  label='Zip Code'\n                  placeholder='Zip Code'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='city'\n                  value={city}\n                  label='City'\n                  placeholder='City'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='stateCode'\n                  value={stateCode}\n                  label='State'\n                  placeholder='State'\n                  onChange={handleChange} />\n              </Form.Group>\n              <Link to=\"/payment\">\n                <Form.Button onClick={handleSubmit}>Proceed to Payment</Form.Button>\n              </Link>\n            </Form>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header as='h3' style={{ fontSize: '2em', marginTop: '2rem' }}>\n                Billing Information\n            </Header>\n            <p style={{ fontSize: '1.33em' }}>\n              We need a some information about you to complete your order.\n            </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  )\n}\n\nexport default Billing\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Icon,\n  Segment,\n  Step,\n} from 'semantic-ui-react'\n\nconst steps = [\n  {\n    key: 'shopping',\n    completed: true,\n    icon: 'shopping cart',\n    title: 'Shopping',\n  },\n  {\n    key: 'billing',\n    completed: true,\n    icon: 'address card outline',\n    title: 'Billing',\n  },\n  {\n    key: 'payment',\n    completed: true,\n    icon: 'payment',\n    title: 'Pay',\n  },\n  {\n    key: 'confirmation',\n    active: true,\n    icon: 'info',\n    title: 'Confirmation'\n  },\n]\n\nconst ConfirmationSteps = () => <Step.Group items={steps} />\n\nfunction Confirmation({ globalState }) {\n  const {\n    firstName,\n    lastName,\n    schoolName,\n    districtName,\n    billingAddress,\n    zipCode,\n    city,\n    stateCode\n  } = globalState.formInfo;\n\n  return (\n    <Segment placeholder>\n      <ConfirmationSteps />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <Header as='h3' style={{ fontSize: '2em', marginTop: '2rem' }}>\n                Your order has been placed:\n            </Header>\n            <p style={{ fontSize: '1.3em' }}>\n              Thank you for purchasing our product! A custom url has been generated for you.\n            </p>\n            <p style={{ fontSize: '1.3em' }}>\n              The button below will redirect you to your school's scheduling software where you will be prompted to log in and complete the setup.\n            </p>\n            <a href=\"https://falcontime.herokuapp.com/users/sign_in\">\n              <Button size='huge'>\n                Setup\n                <Icon name=\"arrow alternate circle right outline\" />\n              </Button>\n            </a>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header as='h3' style={{ fontSize: '2em', marginTop: '2rem' }}>\n                Order Information:\n            </Header>\n            <Form>\n              <Form.Group widths={2} inline>\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='firstName'\n                  value={firstName || \"\"}\n                  label='First name' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='lastName'\n                  value={lastName || \"\"}\n                  label='Last name' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='schoolName'\n                  value={schoolName || \"\"}\n                  label='School Name' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='districtName'\n                  value={districtName || \"\"}\n                  label='District Name' />\n              </Form.Group>\n              <Form.Group widths={4} inline>\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='billingAddress'\n                  value={billingAddress || \"\"}\n                  label='Billing Address' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='zipCode'\n                  value={zipCode || \"\"}\n                  label='Zip Code' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='city'\n                  value={city || \"\"}\n                  label='City' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='stateCode'\n                  value={stateCode || \"\"}\n                  label='State' />\n              </Form.Group>\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  )\n}\n\nexport default Confirmation\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Segment,\n} from 'semantic-ui-react'\n\nfunction LandingPage() {\n  return (\n    <>\n      <Segment\n        inverted\n        textAlign='center'\n        style={{ minHeight: 450, paddingTop: '4em' }}\n        vertical>\n        <Grid container stackable verticalAlign='middle'>\n          <Grid.Row>\n            <Grid.Column width={6}>\n              <Image bordered rounded size='large' src={require('../images/brian.jpg')} />\n            </Grid.Column>\n            <Grid.Column floated='right' width={9}>\n              <Container text>\n                <Header\n                  as='h1'\n                  content='Free Time'\n                  inverted\n                  style={{\n                    fontSize: '4em',\n                    fontWeight: 'normal',\n                    marginBottom: 0,\n                    marginTop: '0.5em',\n                  }}\n                />\n                <Header\n                  as='h2'\n                  content='Your all in one solution to managing student elective scheduling.'\n                  inverted\n                  style={{\n                    fontSize: '1.7em',\n                    fontWeight: 'normal',\n                    marginTop: '1.5em',\n                  }}\n                />\n              </Container>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column textAlign='center'>\n              <Link to=\"/store\">\n                <Button size='huge'>Buy Now</Button>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment style={{ padding: '8em 0em' }} vertical>\n        <Grid container stackable verticalAlign='middle'>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Customized Scheduling Solutions\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                We offer customized solutions to your most challenging scheduling problems.\n                To ensure the correct fit for you.\n              </p>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Scaling Down? Scaling up? No problem!\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                No matter the size of your district or your state of growth our software scales with you at your pace.\n              </p>\n            </Grid.Column>\n            <Grid.Column floated='right' width={6}>\n              <Image bordered rounded size='large' src={require('../images/working-students.jpg')} />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column textAlign='center'>\n              <Link to=\"/store\">\n                <Button color=\"black\" size='huge'>View Pricing</Button>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </>\n  );\n}\n\nexport default LandingPage\n","import React, {Component} from 'react';\n\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Container,\n  Divider,\n} from 'semantic-ui-react'\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { complete: false };\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(ev) {\n    let { token } = await this.props.stripe.createToken({ name: \"Name\" });\n\n    if (!token) {\n      console.log(\"No Token Found!\")\n      return\n    }\n\n    let response = await fetch(\"https://free-time-services.herokuapp.com/charge\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: { \"Content-Type\": \"text/plain\" },\n      body: JSON.stringify({amount: this.props.amount, description: this.props.description, source: token.id})\n    });\n\n    if (response.ok) console.log(\"Purchase Complete!\")\n    if (response.ok) this.setState({ complete: true });\n  }\n\n  render() {\n    if (this.state.complete) {\n      return (\n        <Link to=\"/confirmation\">\n          <Button color=\"green\" size='huge'>View Confirmation</Button>\n        </Link>\n      );\n    }\n\n    return (\n      <div className=\"checkout\">\n        <Divider />\n        <Container>\n          <CardElement />\n        </Container>\n        <Divider />\n        <Button color=\"blue\" onClick={this.submit} size='medium'>Pay</Button>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(CheckoutForm);","import React from \"react\";\n\nimport { Elements, StripeProvider } from 'react-stripe-elements';\n\nimport CheckoutForm from '../components/checkoutForm';\n\n\nimport {\n  Segment,\n  Step,\n} from 'semantic-ui-react'\n\nconst steps = [\n  {\n    key: 'shopping',\n    completed: true,\n    icon: 'shopping cart',\n    title: 'Shopping',\n  },\n  {\n    key: 'billing',\n    completed: true,\n    icon: 'address card outline',\n    title: 'Billing',\n  },\n  {\n    key: 'payment',\n    active: true,\n    icon: 'payment',\n    title: 'Pay',\n  },\n  {\n    key: 'confirmation',\n    disabled: true,\n    icon: 'info',\n    title: 'Confirmation'\n  },\n]\n\nconst PaymentSteps = () => <Step.Group items={steps} />\n\nfunction Payment({globalState}) {\n  return (\n    <Segment placeholder>\n      <PaymentSteps />\n      <StripeProvider apiKey=\"pk_test_ae2dqlbeTWbXTJQiTPq80y5I00jRIfAKcM\">\n        <div className=\"example\">\n          <h1>Input Your Payment Information Below</h1>\n          <Elements>\n            <CheckoutForm amount={globalState.paymentPlan.amount} description={globalState.paymentPlan.description} />\n          </Elements>\n        </div>\n      </StripeProvider>\n    </Segment>\n  );\n}\n\nexport default Payment\n","import React, { useCallback, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  Segment,\n  Step,\n} from 'semantic-ui-react'\n\nconst steps = [\n  {\n    key: 'shopping',\n    active: true,\n    icon: 'shopping cart',\n    title: 'Shopping',\n  },\n  {\n    key: 'billing',\n    disabled: true,\n    icon: 'address card outline',\n    title: 'Billing',\n  },\n  {\n    key: 'payment',\n    disabled: true,\n    icon: 'payment',\n    title: 'Pay',\n  },\n  {\n    key: 'confirmation',\n    disabled: true,\n    icon: 'info',\n    title: 'Confirmation'\n  },\n]\n\nconst CheckoutSteps = () => <Step.Group items={steps} />\n\nfunction Storefront({updateGlobalState, globalState}) {\n  const handleSubmit = useCallback((cost) => {\n    globalState.paymentPlan.amount = cost\n\n    if (cost === 5000) {\n      globalState.paymentPlan.description = \"Trial Subscription\"\n    } else if (cost === 100000) {\n      globalState.paymentPlan.description = \"Year Subscription\"\n    }\n\n    updateGlobalState(globalState);\n  }, []);\n\n  return (\n    <>\n      <Segment placeholder>\n        <CheckoutSteps />\n        <Card.Group centered>\n          <Card>\n            <Card.Content>\n              <Card.Header textAlign=\"center\">Trial</Card.Header>\n              <Card.Meta>Non-Recurring</Card.Meta>\n              <Card.Description>\n                Month long trial of the scheduling software\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <Link to=\"/billing\">\n                <Button basic color='green' onClick={() => handleSubmit(5000)}>Price: $50</Button>\n              </Link>\n            </Card.Content>\n          </Card>\n          <Card>\n            <Card.Content>\n              <Card.Header textAlign=\"center\">Yearly Subscription</Card.Header>\n              <Card.Meta>Recurring Annually</Card.Meta>\n              <Card.Description>\n                Year long subscription\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <Link to=\"/billing\">\n                <Button basic color='green' onClick={() => handleSubmit(100000)}>Price: $1000</Button>\n              </Link>\n            </Card.Content>\n          </Card>\n        </Card.Group>\n      </Segment>\n    </>\n  );\n}\n\nexport default Storefront\n","import React, { useCallback, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Route,\n  HashRouter\n} from \"react-router-dom\";\n\nimport Billing from \"./containers/billing\";\nimport Checkout from \"./containers/checkout\";\nimport LandingPage from \"./containers/landingPage\";\nimport Payment from \"./containers/payment\";\nimport Storefront from \"./containers/storefront\";\n\nimport 'semantic-ui-css/semantic.min.css'\n\nfunction App() {\n  const [globalState, setGlobalState] = useState({\n    formInfo: {\n      firstName: \"\",\n      lastName: \"\",\n      schoolName: \"\",\n      districtName: \"\",\n      creditCardNumber: \"\",\n      securityCode: \"\",\n      billingAddress: \"\",\n      zipCode: \"\",\n      city: \"\",\n      stateCode: \"\"\n    },\n    paymentPlan: {\n      amount: 100000,\n      description: \"\"\n    }\n  });\n\n  const handleGlobalStateUpdate = useCallback((updatedValues) => {\n      setGlobalState((prevValues) => {\n        return { ...prevValues, ...updatedValues }\n      });\n  }, []);\n\n  return (\n    <HashRouter>\n      <Route path=\"/store\" exact>\n        <Storefront\n          updateGlobalState={handleGlobalStateUpdate}\n          globalState={globalState} />\n      </Route>\n      <Route path=\"/billing\" exact>\n        <Billing\n          updateGlobalState={handleGlobalStateUpdate}\n          globalState={globalState} />\n      </Route>\n      <Route path=\"/payment\" exact>\n        <Payment globalState={globalState} />\n      </Route>\n      <Route path=\"/confirmation\" exact>\n        <Checkout globalState={globalState} />\n      </Route>\n      <Route path=\"/\" exact>\n        <LandingPage />\n      </Route>\n    </HashRouter>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}