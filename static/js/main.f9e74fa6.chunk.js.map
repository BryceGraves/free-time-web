{"version":3,"sources":["images/working-students.jpg","containers/billing.js","containers/checkout.js","containers/landingPage.js","components/checkoutForm.js","containers/payment.js","containers/storefront.js","index.js"],"names":["module","exports","steps","key","completed","icon","title","active","disabled","BillingSteps","Step","Group","items","Billing","formUpdate","info","handleChange","useCallback","e","name","value","handleSubmit","firstName","lastName","schoolName","districtName","billingAddress","creditCardNumber","securityCode","zipCode","city","stateCode","Segment","placeholder","Grid","Row","Column","width","Form","widths","inline","Input","fluid","label","onChange","to","Button","onClick","Header","as","style","fontSize","marginTop","ConfirmationSteps","Confirmation","readOnly","size","LandingPage","inverted","textAlign","minHeight","padding","vertical","Container","text","content","fontWeight","marginBottom","primary","Icon","container","stackable","verticalAlign","floated","Image","bordered","rounded","src","require","CheckoutForm","props","state","complete","submit","bind","ev","this","stripe","createToken","token","console","log","body","amount","source","id","fetch","mode","method","headers","response","ok","setState","className","Component","injectStripe","PaymentSteps","Payment","apiKey","CheckoutSteps","Storefront","Card","centered","Content","Meta","Description","extra","basic","color","ReactDOM","render","useState","formInfo","setFormInfo","handleFormUpdate","updatedValues","path","exact","document","querySelector"],"mappings":"uIAAAA,EAAOC,QAAU,IAA0B,8C,mJCYrCC,EAAQ,CACZ,CACEC,IAAK,WACLC,WAAW,EACXC,KAAM,gBACNC,MAAO,YAET,CACEH,IAAK,UACLI,QAAQ,EACRF,KAAM,uBACNC,MAAO,WAET,CACEH,IAAK,UACLK,UAAU,EACVH,KAAM,UACNC,MAAO,OAET,CACEH,IAAK,eACLK,UAAU,EACVH,KAAM,OACNC,MAAO,iBAILG,EAAe,kBAAM,kBAACC,EAAA,EAAKC,MAAN,CAAYC,MAAOV,KA8G/BW,MA5Gf,YAAwC,IAArBC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,KACvBC,EAAeC,uBAAY,SAACC,EAAD,GAAyB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3CL,EAAKI,GAAQC,KAGTC,EAAeJ,uBAAY,WAC/BH,EAAWC,MAIXO,EAUEP,EAVFO,UACAC,EASER,EATFQ,SACAC,EAQET,EARFS,WACAC,EAOEV,EAPFU,aAGAC,GAIEX,EANFY,iBAMEZ,EALFa,aAKEb,EAJFW,gBACAG,EAGEd,EAHFc,QACAC,EAEEf,EAFFe,KACAC,EACEhB,EADFgB,UAGF,OACE,kBAACC,EAAA,EAAD,CAASC,aAAW,GAClB,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,KACE,kBAACD,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClB,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAK3B,MAAN,CAAY4B,OAAQ,EAAGC,QAAM,GAC3B,kBAACF,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLvB,KAAK,YACLC,MAAOE,EACPqB,MAAM,aACNV,YAAY,aACZW,SAAU5B,IACZ,kBAACsB,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLvB,KAAK,WACLC,MAAOG,EACPoB,MAAM,YACNV,YAAY,YACZW,SAAU5B,IACZ,kBAACsB,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLvB,KAAK,aACLC,MAAOI,EACPmB,MAAM,cACNV,YAAY,cACZW,SAAU5B,IACZ,kBAACsB,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLvB,KAAK,eACLC,MAAOK,EACPkB,MAAM,gBACNV,YAAY,gBACZW,SAAU5B,KAEd,kBAACsB,EAAA,EAAK3B,MAAN,CAAY4B,OAAQ,EAAGC,QAAM,GAC3B,kBAACF,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLvB,KAAK,iBACLC,MAAOM,EACPiB,MAAM,kBACNV,YAAY,kBACZW,SAAU5B,IACZ,kBAACsB,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLvB,KAAK,UACLC,MAAOS,EACPc,MAAM,WACNV,YAAY,WACZW,SAAU5B,IACZ,kBAACsB,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLvB,KAAK,OACLC,MAAOU,EACPa,MAAM,OACNV,YAAY,OACZW,SAAU5B,IACZ,kBAACsB,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLvB,KAAK,YACLC,MAAOW,EACPY,MAAM,QACNV,YAAY,QACZW,SAAU5B,KAEd,kBAAC,IAAD,CAAM6B,GAAG,YACP,kBAACP,EAAA,EAAKQ,OAAN,CAAaC,QAAS1B,GAAtB,yBAIN,kBAACa,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClB,kBAACW,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAO,CAAEC,SAAU,MAAOC,UAAW,SAArD,uBAGA,uBAAGF,MAAO,CAAEC,SAAU,WAAtB,uE,SC9HNjD,EAAQ,CACZ,CACEC,IAAK,WACLC,WAAW,EACXC,KAAM,gBACNC,MAAO,YAET,CACEH,IAAK,UACLC,WAAW,EACXC,KAAM,uBACNC,MAAO,WAET,CACEH,IAAK,UACLC,WAAW,EACXC,KAAM,UACNC,MAAO,OAET,CACEH,IAAK,eACLI,QAAQ,EACRF,KAAM,OACNC,MAAO,iBAIL+C,EAAoB,kBAAM,kBAAC3C,EAAA,EAAKC,MAAN,CAAYC,MAAOV,KA8FpCoD,MA5Ff,YAAiC,IAATvC,EAAQ,EAARA,KAEpBO,EAUEP,EAVFO,UACAC,EASER,EATFQ,SACAC,EAQET,EARFS,WACAC,EAOEV,EAPFU,aAGAC,GAIEX,EANFY,iBAMEZ,EALFa,aAKEb,EAJFW,gBACAG,EAGEd,EAHFc,QACAC,EAEEf,EAFFe,KACAC,EACEhB,EADFgB,UAGF,OACE,kBAACC,EAAA,EAAD,CAASC,aAAW,GAClB,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,KACE,kBAACD,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClB,kBAACW,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAO,CAAEC,SAAU,MAAOC,UAAW,SAArD,+BAIF,kBAAClB,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClB,kBAACW,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAO,CAAEC,SAAU,MAAOC,UAAW,SAArD,sBAGA,kBAACd,EAAA,EAAD,KACE,kBAACA,EAAA,EAAK3B,MAAN,CAAY4B,OAAQ,EAAGC,QAAM,GAC3B,kBAACF,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLa,UAAQ,EACRpC,KAAK,YACLC,MAAOE,GAAa,GACpBqB,MAAM,eACR,kBAACL,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLa,UAAQ,EACRpC,KAAK,WACLC,MAAOG,GAAY,GACnBoB,MAAM,cACR,kBAACL,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLa,UAAQ,EACRpC,KAAK,aACLC,MAAOI,GAAc,GACrBmB,MAAM,gBACR,kBAACL,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLa,UAAQ,EACRpC,KAAK,eACLC,MAAOK,GAAgB,GACvBkB,MAAM,mBAEV,kBAACL,EAAA,EAAK3B,MAAN,CAAY4B,OAAQ,EAAGC,QAAM,GAC3B,kBAACF,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLa,UAAQ,EACRpC,KAAK,iBACLC,MAAOM,GAAkB,GACzBiB,MAAM,oBACR,kBAACL,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLa,UAAQ,EACRpC,KAAK,UACLC,MAAOS,GAAW,GAClBc,MAAM,aACR,kBAACL,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLa,UAAQ,EACRpC,KAAK,OACLC,MAAOU,GAAQ,GACfa,MAAM,SACR,kBAACL,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLa,UAAQ,EACRpC,KAAK,YACLC,MAAOW,GAAa,GACpBY,MAAM,eAMlB,kBAAC,IAAD,CAAME,GAAG,KACP,kBAACC,EAAA,EAAD,CAAQU,KAAK,QAAb,oB,0BCzCOC,MAzEf,WACE,OACE,oCACE,kBAACzB,EAAA,EAAD,CACE0B,UAAQ,EACRC,UAAU,SACVT,MAAO,CAAEU,UAAW,IAAKC,QAAS,WAClCC,UAAQ,GACR,kBAACC,EAAA,EAAD,CAAWC,MAAI,GACb,kBAAChB,EAAA,EAAD,CACEC,GAAG,KACHgB,QAAQ,YACRP,UAAQ,EACRR,MAAO,CACLC,SAAU,MACVe,WAAY,SACZC,aAAc,EACdf,UAAW,SAGf,kBAACJ,EAAA,EAAD,CACEC,GAAG,KACHgB,QAAQ,qEACRP,UAAQ,EACRR,MAAO,CACLC,SAAU,QACVe,WAAY,SACZd,UAAW,WAGf,kBAAC,IAAD,CAAMP,GAAG,UACP,kBAACC,EAAA,EAAD,CAAQsB,SAAO,EAACZ,KAAK,QACnB,kBAACa,EAAA,EAAD,CAAMlD,KAAK,kBADb,eAON,kBAACa,EAAA,EAAD,CAASkB,MAAO,CAAEW,QAAS,WAAaC,UAAQ,GAC9C,kBAAC5B,EAAA,EAAD,CAAMoC,WAAS,EAACC,WAAS,EAACC,cAAc,UACtC,kBAACtC,EAAA,EAAKC,IAAN,KACE,kBAACD,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClB,kBAACW,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAO,CAAEC,SAAU,QAAnC,mCAGA,uBAAGD,MAAO,CAAEC,SAAU,WAAtB,kHAIA,kBAACH,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAO,CAAEC,SAAU,QAAnC,yCAGA,uBAAGD,MAAO,CAAEC,SAAU,WAAtB,2GAIF,kBAACjB,EAAA,EAAKE,OAAN,CAAaqC,QAAQ,QAAQpC,MAAO,GAClC,kBAACqC,EAAA,EAAD,CAAOC,UAAQ,EAACC,SAAO,EAACpB,KAAK,QAAQqB,IAAKC,EAAQ,SAGtD,kBAAC5C,EAAA,EAAKC,IAAN,KACE,kBAACD,EAAA,EAAKE,OAAN,CAAauB,UAAU,UACrB,kBAAC,IAAD,CAAMd,GAAG,UACP,kBAACC,EAAA,EAAD,CAAQU,KAAK,QAAb,uB,wFCvEVuB,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CAAEC,UAAU,GACzB,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBAJG,E,6GAONC,G,6FACWC,KAAKN,MAAMO,OAAOC,YAAY,CAAErE,KAAM,S,mBAAtDsE,E,EAAAA,M,uBAGJC,QAAQC,IAAI,mB,iCAIVC,EAAO,CACTC,OAAQ,IACRC,OAAQL,EAAMM,I,UAGKC,MAAM,kDAAmD,CAC5EC,KAAM,OACNC,OAAQ,OACRC,QAAS,CAAE,eAAgB,cAC3BP,KAAMA,I,SAJJQ,E,QAOSC,IAAIX,QAAQC,IAAI,sBACzBS,EAASC,IAAIf,KAAKgB,SAAS,CAAEpB,UAAU,I,uIAI3C,OAAII,KAAKL,MAAMC,SAEX,kBAAC,IAAD,CAAMrC,GAAG,iBACP,kBAACC,EAAA,EAAD,CAAQU,KAAK,QAAb,sBAMJ,yBAAK+C,UAAU,YACb,uEACA,kBAAC,cAAD,MACA,kBAACzD,EAAA,EAAD,CAAQC,QAASuC,KAAKH,OAAQ3B,KAAK,UAAnC,Y,GA7CmBgD,aAmDZC,yBAAa1B,GC5CtB7E,EAAQ,CACZ,CACEC,IAAK,WACLC,WAAW,EACXC,KAAM,gBACNC,MAAO,YAET,CACEH,IAAK,UACLC,WAAW,EACXC,KAAM,uBACNC,MAAO,WAET,CACEH,IAAK,UACLI,QAAQ,EACRF,KAAM,UACNC,MAAO,OAET,CACEH,IAAK,eACLK,UAAU,EACVH,KAAM,OACNC,MAAO,iBAILoG,EAAe,kBAAM,kBAAChG,EAAA,EAAKC,MAAN,CAAYC,MAAOV,KAkB/ByG,MAhBf,WACE,OACE,kBAAC3E,EAAA,EAAD,CAASC,aAAW,GAClB,kBAAC,EAAD,MACA,kBAAC,iBAAD,CAAgB2E,OAAO,8CACrB,yBAAKL,UAAU,WACb,oEACA,kBAAC,WAAD,KACE,kBAAC,EAAD,W,SCtCNrG,EAAQ,CACZ,CACEC,IAAK,WACLI,QAAQ,EACRF,KAAM,gBACNC,MAAO,YAET,CACEH,IAAK,UACLK,UAAU,EACVH,KAAM,uBACNC,MAAO,WAET,CACEH,IAAK,UACLK,UAAU,EACVH,KAAM,UACNC,MAAO,OAET,CACEH,IAAK,eACLK,UAAU,EACVH,KAAM,OACNC,MAAO,iBAILuG,EAAgB,kBAAM,kBAACnG,EAAA,EAAKC,MAAN,CAAYC,MAAOV,KAwDhC4G,MAtDf,WACE,OACE,oCACE,kBAAC9E,EAAA,EAAD,CAASC,aAAW,GAClB,kBAAC,EAAD,MACA,kBAAC8E,EAAA,EAAKpG,MAAN,CAAYqG,UAAQ,GAClB,kBAACD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,QAAN,KACE,kBAACF,EAAA,EAAK/D,OAAN,uBACA,kBAAC+D,EAAA,EAAKG,KAAN,sBACA,kBAACH,EAAA,EAAKI,YAAN,qDAIF,kBAACJ,EAAA,EAAKE,QAAN,CAAcG,OAAK,GACjB,kBAAC,IAAD,CAAMvE,GAAG,YACP,kBAACC,EAAA,EAAD,CAAQuE,OAAK,EAACC,MAAM,SAApB,iBAIN,kBAACP,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,QAAN,KACE,kBAACF,EAAA,EAAK/D,OAAN,qCACA,kBAAC+D,EAAA,EAAKG,KAAN,2BACA,kBAACH,EAAA,EAAKI,YAAN,gCAIF,kBAACJ,EAAA,EAAKE,QAAN,CAAcG,OAAK,GACjB,kBAAC,IAAD,CAAMvE,GAAG,YACP,kBAACC,EAAA,EAAD,CAAQuE,OAAK,EAACC,MAAM,SAApB,mBAIN,kBAACP,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,QAAN,KACE,kBAACF,EAAA,EAAK/D,OAAN,qCACA,kBAAC+D,EAAA,EAAKG,KAAN,8BACA,kBAACH,EAAA,EAAKI,YAAN,oDAIF,kBAACJ,EAAA,EAAKE,QAAN,CAAcG,OAAK,GACjB,kBAAC,IAAD,CAAMvE,GAAG,YACP,kBAACC,EAAA,EAAD,CAAQuE,OAAK,EAACC,MAAM,SAApB,uB,OC1BhBC,IAASC,OACP,mBA7CF,WAAgB,IAAD,EACmBC,mBAAS,CACvCC,SAAU,CACRpG,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,aAAc,GACdE,iBAAkB,GAClBC,aAAc,GACdF,eAAgB,GAChBG,QAAS,GACTC,KAAM,GACNC,UAAW,MAZF,mBACN2F,EADM,KACIC,EADJ,KAgBPC,EAAmB3G,uBAAY,SAAC4G,GAClCF,EAAYE,KACX,IAGL,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,OAAK,GACxB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,WAAWC,OAAK,GAC1B,kBAAC,EAAD,CACEjH,WAAY8G,EACZ7G,KAAM2G,KAEV,kBAAC,IAAD,CAAOI,KAAK,WAAWC,OAAK,GAC1B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,gBAAgBC,OAAK,GAC/B,kBAAC,EAAD,CAAUhH,KAAM2G,KAElB,kBAAC,IAAD,CAAOI,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,UAON,MACAC,SAASC,cAAc,Y","file":"static/js/main.f9e74fa6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/working-students.31373f62.jpg\";","import React, { useCallback } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Form,\n  Grid,\n  Header,\n  Segment,\n  Step,\n} from 'semantic-ui-react'\n\nconst steps = [\n  {\n    key: 'shopping',\n    completed: true,\n    icon: 'shopping cart',\n    title: 'Shopping',\n  },\n  {\n    key: 'billing',\n    active: true,\n    icon: 'address card outline',\n    title: 'Billing',\n  },\n  {\n    key: 'payment',\n    disabled: true,\n    icon: 'payment',\n    title: 'Pay',\n  },\n  {\n    key: 'confirmation',\n    disabled: true,\n    icon: 'info',\n    title: 'Confirmation'\n  },\n]\n\nconst BillingSteps = () => <Step.Group items={steps} />\n\nfunction Billing({ formUpdate, info }) {\n  const handleChange = useCallback((e, { name, value }) => {\n    info[name] = value\n  });\n\n  const handleSubmit = useCallback(() => {\n    formUpdate(info);\n  });\n\n  const {\n    firstName,\n    lastName,\n    schoolName,\n    districtName,\n    creditCardNumber,\n    securityCode,\n    billingAddress,\n    zipCode,\n    city,\n    stateCode\n  } = info;\n\n  return (\n    <Segment placeholder>\n      <BillingSteps />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <Form>\n              <Form.Group widths={4} inline>\n                <Form.Input\n                  fluid\n                  name='firstName'\n                  value={firstName}\n                  label='First name'\n                  placeholder='First name'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='lastName'\n                  value={lastName}\n                  label='Last name'\n                  placeholder='Last name'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='schoolName'\n                  value={schoolName}\n                  label='School Name'\n                  placeholder='School Name'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='districtName'\n                  value={districtName}\n                  label='District Name'\n                  placeholder='District Name'\n                  onChange={handleChange} />\n              </Form.Group>\n              <Form.Group widths={4} inline>\n                <Form.Input\n                  fluid\n                  name='billingAddress'\n                  value={billingAddress}\n                  label='Billing Address'\n                  placeholder='Billing Address'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='zipCode'\n                  value={zipCode}\n                  label='Zip Code'\n                  placeholder='Zip Code'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='city'\n                  value={city}\n                  label='City'\n                  placeholder='City'\n                  onChange={handleChange} />\n                <Form.Input\n                  fluid\n                  name='stateCode'\n                  value={stateCode}\n                  label='State'\n                  placeholder='State'\n                  onChange={handleChange} />\n              </Form.Group>\n              <Link to=\"/payment\">\n                <Form.Button onClick={handleSubmit}>Proceed to Payment</Form.Button>\n              </Link>\n            </Form>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header as='h3' style={{ fontSize: '2em', marginTop: '2rem' }}>\n                Billing Information\n            </Header>\n            <p style={{ fontSize: '1.33em' }}>\n              We need a little information about you to complete your order.\n            </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  )\n}\n\nexport default Billing\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Segment,\n  Step,\n} from 'semantic-ui-react'\n\nconst steps = [\n  {\n    key: 'shopping',\n    completed: true,\n    icon: 'shopping cart',\n    title: 'Shopping',\n  },\n  {\n    key: 'billing',\n    completed: true,\n    icon: 'address card outline',\n    title: 'Billing',\n  },\n  {\n    key: 'payment',\n    completed: true,\n    icon: 'payment',\n    title: 'Pay',\n  },\n  {\n    key: 'confirmation',\n    active: true,\n    icon: 'info',\n    title: 'Confirmation'\n  },\n]\n\nconst ConfirmationSteps = () => <Step.Group items={steps} />\n\nfunction Confirmation({ info }) {\n  const {\n    firstName,\n    lastName,\n    schoolName,\n    districtName,\n    creditCardNumber,\n    securityCode,\n    billingAddress,\n    zipCode,\n    city,\n    stateCode\n  } = info;\n\n  return (\n    <Segment placeholder>\n      <ConfirmationSteps />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <Header as='h3' style={{ fontSize: '2em', marginTop: '2rem' }}>\n                Your order has been placed\n            </Header>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header as='h3' style={{ fontSize: '2em', marginTop: '2rem' }}>\n                Order Information:\n            </Header>\n            <Form>\n              <Form.Group widths={2} inline>\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='firstName'\n                  value={firstName || \"\"}\n                  label='First name' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='lastName'\n                  value={lastName || \"\"}\n                  label='Last name' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='schoolName'\n                  value={schoolName || \"\"}\n                  label='School Name' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='districtName'\n                  value={districtName || \"\"}\n                  label='District Name' />\n              </Form.Group>\n              <Form.Group widths={4} inline>\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='billingAddress'\n                  value={billingAddress || \"\"}\n                  label='Billing Address' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='zipCode'\n                  value={zipCode || \"\"}\n                  label='Zip Code' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='city'\n                  value={city || \"\"}\n                  label='City' />\n                <Form.Input\n                  fluid\n                  readOnly\n                  name='stateCode'\n                  value={stateCode || \"\"}\n                  label='State' />\n              </Form.Group>\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Link to=\"/\">\n        <Button size='huge'>I'm Done Here</Button>\n      </Link>\n    </Segment>\n  )\n}\n\nexport default Confirmation\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Segment,\n} from 'semantic-ui-react'\n\nfunction LandingPage() {\n  return (\n    <>\n      <Segment\n        inverted\n        textAlign='center'\n        style={{ minHeight: 700, padding: '1em 0em' }}\n        vertical>\n        <Container text>\n          <Header\n            as='h1'\n            content='Free Time'\n            inverted\n            style={{\n              fontSize: '4em',\n              fontWeight: 'normal',\n              marginBottom: 0,\n              marginTop: '3em',\n            }}\n          />\n          <Header\n            as='h2'\n            content='Your all in one solution to managing student elective shenanigans.'\n            inverted\n            style={{\n              fontSize: '1.7em',\n              fontWeight: 'normal',\n              marginTop: '1.5em',\n            }}\n          />\n          <Link to=\"/store\">\n            <Button primary size='huge'>\n              <Icon name='shopping cart' />\n              Shop Now\n            </Button>\n          </Link>\n        </Container>\n      </Segment>\n      <Segment style={{ padding: '8em 0em' }} vertical>\n        <Grid container stackable verticalAlign='middle'>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Customized Scheduling Solutions\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                We offer customized solutions to your most challenging scheduling problems.\n                To ensure the correct fit for you.\n              </p>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Scaling Down? Scaling up? No problem!\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                No matter the size of your district or your state of growth our software scales with you at your pace.\n              </p>\n            </Grid.Column>\n            <Grid.Column floated='right' width={6}>\n              <Image bordered rounded size='large' src={require('../images/working-students.jpg')} />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column textAlign='center'>\n              <Link to=\"/store\">\n                <Button size='huge'>View Pricing</Button>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </>\n  );\n}\n\nexport default LandingPage\n","import React, {Component} from 'react';\n\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport { Link } from \"react-router-dom\";\nimport { Button } from 'semantic-ui-react'\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { complete: false };\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(ev) {\n    let { token } = await this.props.stripe.createToken({ name: \"Name\" });\n\n    if (!token) {\n      console.log(\"No Token Found!\")\n      return\n    }\n\n    let body = {\n      amount: 100000,\n      source: token.id\n    };\n\n    let response = await fetch(\"https://free-time-services.herokuapp.com/charge\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: { \"Content-Type\": \"text/plain\" },\n      body: body\n    });\n\n    if (response.ok) console.log(\"Purchase Complete!\")\n    if (response.ok) this.setState({ complete: true });\n  }\n\n  render() {\n    if (this.state.complete) {\n      return (\n        <Link to=\"/confirmation\">\n          <Button size='huge'>View Confirmation</Button>\n        </Link>\n      );\n    }\n\n    return (\n      <div className=\"checkout\">\n        <p>Would you like to complete the purchase?</p>\n        <CardElement />\n        <Button onClick={this.submit} size='medium'>Pay</Button>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(CheckoutForm);","import React, { useCallback } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Elements, StripeProvider } from 'react-stripe-elements';\n\nimport CheckoutForm from '../components/checkoutForm';\n\n\nimport {\n  Segment,\n  Step,\n} from 'semantic-ui-react'\n\nconst steps = [\n  {\n    key: 'shopping',\n    completed: true,\n    icon: 'shopping cart',\n    title: 'Shopping',\n  },\n  {\n    key: 'billing',\n    completed: true,\n    icon: 'address card outline',\n    title: 'Billing',\n  },\n  {\n    key: 'payment',\n    active: true,\n    icon: 'payment',\n    title: 'Pay',\n  },\n  {\n    key: 'confirmation',\n    disabled: true,\n    icon: 'info',\n    title: 'Confirmation'\n  },\n]\n\nconst PaymentSteps = () => <Step.Group items={steps} />\n\nfunction Payment() {\n  return (\n    <Segment placeholder>\n      <PaymentSteps />\n      <StripeProvider apiKey=\"pk_test_ae2dqlbeTWbXTJQiTPq80y5I00jRIfAKcM\">\n        <div className=\"example\">\n          <h1>Input Your Payment Information Below</h1>\n          <Elements>\n            <CheckoutForm />\n          </Elements>\n        </div>\n      </StripeProvider>\n    </Segment>\n  );\n}\n\nexport default Payment\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  Segment,\n  Step,\n  Header,\n} from 'semantic-ui-react'\n\nconst steps = [\n  {\n    key: 'shopping',\n    active: true,\n    icon: 'shopping cart',\n    title: 'Shopping',\n  },\n  {\n    key: 'billing',\n    disabled: true,\n    icon: 'address card outline',\n    title: 'Billing',\n  },\n  {\n    key: 'payment',\n    disabled: true,\n    icon: 'payment',\n    title: 'Pay',\n  },\n  {\n    key: 'confirmation',\n    disabled: true,\n    icon: 'info',\n    title: 'Confirmation'\n  },\n]\n\nconst CheckoutSteps = () => <Step.Group items={steps} />\n\nfunction Storefront() {\n  return (\n    <>\n      <Segment placeholder>\n        <CheckoutSteps />\n        <Card.Group centered>\n          <Card>\n            <Card.Content>\n              <Card.Header>Purchase Trial</Card.Header>\n              <Card.Meta>Non-Recurring</Card.Meta>\n              <Card.Description>\n                Month long trial of the scheduling software\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <Link to=\"/billing\">\n                <Button basic color='green'>Price: $50</Button>\n              </Link>\n            </Card.Content>\n          </Card>\n          <Card>\n            <Card.Content>\n              <Card.Header>Purchase Yearly Subscription</Card.Header>\n              <Card.Meta>Recurring Annually</Card.Meta>\n              <Card.Description>\n                Year long subscription\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <Link to=\"/billing\">\n                <Button basic color='green'>Price: $1000</Button>\n              </Link>\n            </Card.Content>\n          </Card>\n          <Card>\n            <Card.Content>\n              <Card.Header>Purchase Decade Subscription</Card.Header>\n              <Card.Meta>Recurring Decennially</Card.Meta>\n              <Card.Description>\n                Decade long subscription at a reduced cost\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <Link to=\"/billing\">\n                <Button basic color='green'>Price: $8000</Button>\n              </Link>\n            </Card.Content>\n          </Card>\n        </Card.Group>\n      </Segment>\n    </>\n  );\n}\n\nexport default Storefront\n","import React, { useCallback, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Route,\n  HashRouter\n} from \"react-router-dom\";\n\nimport Billing from \"./containers/billing\";\nimport Checkout from \"./containers/checkout\";\nimport LandingPage from \"./containers/landingPage\";\nimport Payment from \"./containers/payment\";\nimport Storefront from \"./containers/storefront\";\n\nimport 'semantic-ui-css/semantic.min.css'\n\nfunction App() {\n  const [formInfo, setFormInfo] = useState({\n    formInfo: {\n      firstName: \"\",\n      lastName: \"\",\n      schoolName: \"\",\n      districtName: \"\",\n      creditCardNumber: \"\",\n      securityCode: \"\",\n      billingAddress: \"\",\n      zipCode: \"\",\n      city: \"\",\n      stateCode: \"\"\n    }\n  });\n\n  const handleFormUpdate = useCallback((updatedValues) => {\n      setFormInfo(updatedValues);\n    }, []\n  );\n\n  return (\n    <HashRouter>\n      <Route path=\"/store\" exact>\n        <Storefront />\n      </Route>\n      <Route path=\"/billing\" exact>\n        <Billing\n          formUpdate={handleFormUpdate}\n          info={formInfo} />\n      </Route>\n      <Route path=\"/payment\" exact>\n        <Payment />\n      </Route>\n      <Route path=\"/confirmation\" exact>\n        <Checkout info={formInfo} />\n      </Route>\n      <Route path=\"/\" exact>\n        <LandingPage />\n      </Route>\n    </HashRouter>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}